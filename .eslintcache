[{"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\index.js":"1","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\reportWebVitals.js":"2","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\App.js":"3","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signup.js":"4","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signin.js":"5","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signout.js":"6","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\HistoryBox.js":"7","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ActiveAccount.js":"8","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\AnotherProfile.js":"9","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Profile.js":"10","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ForgetPassword.js":"11","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Home.js":"12","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroGameHistory.js":"13","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signup.js":"14","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signin.js":"15","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\InfomationBox.js":"16","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\userApi.js":"17","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroBoard.js":"18","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\HistoryItem.js":"19","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\TopBar.js":"20","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageItem.js":"21","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageList.js":"22","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\TopPlayer.js":"23","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Dashboard.js":"24","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Room.js":"25","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Facebook.js":"26","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Google.js":"27","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\axiosClient.js":"28","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroSquare.js":"29","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroRow.js":"30","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageRoom.js":"31","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CountDown.js":"32","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroGame.js":"33","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\oauthApi.js":"34","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageBox.js":"35"},{"size":465,"mtime":1608121408204,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1533,"mtime":1609653676608,"results":"39","hashOfConfig":"37"},{"size":366,"mtime":1608649340270,"results":"40","hashOfConfig":"37"},{"size":368,"mtime":1607513928457,"results":"41","hashOfConfig":"37"},{"size":238,"mtime":1608649340269,"results":"42","hashOfConfig":"37"},{"size":1011,"mtime":1609653676619,"results":"43","hashOfConfig":"37"},{"size":2789,"mtime":1608649340267,"results":"44","hashOfConfig":"37"},{"size":2595,"mtime":1609653676612,"results":"45","hashOfConfig":"37"},{"size":6708,"mtime":1609653676625,"results":"46","hashOfConfig":"37"},{"size":8935,"mtime":1609943647348,"results":"47","hashOfConfig":"37"},{"size":1249,"mtime":1610507879154,"results":"48","hashOfConfig":"37"},{"size":8756,"mtime":1609653676615,"results":"49","hashOfConfig":"37"},{"size":3964,"mtime":1609942218873,"results":"50","hashOfConfig":"37"},{"size":4530,"mtime":1609942160407,"results":"51","hashOfConfig":"37"},{"size":3263,"mtime":1609653676622,"results":"52","hashOfConfig":"37"},{"size":1582,"mtime":1609394794271,"results":"53","hashOfConfig":"37"},{"size":524,"mtime":1608121408196,"results":"54","hashOfConfig":"37"},{"size":9335,"mtime":1609653676620,"results":"55","hashOfConfig":"37"},{"size":3561,"mtime":1609943801827,"results":"56","hashOfConfig":"37"},{"size":994,"mtime":1609653676624,"results":"57","hashOfConfig":"37"},{"size":2876,"mtime":1609940966076,"results":"58","hashOfConfig":"37"},{"size":4378,"mtime":1610511600499,"results":"59","hashOfConfig":"37"},{"size":18429,"mtime":1610458330922,"results":"60","hashOfConfig":"37"},{"size":24816,"mtime":1610003154903,"results":"61","hashOfConfig":"37"},{"size":1533,"mtime":1610372102087,"results":"62","hashOfConfig":"37"},{"size":1555,"mtime":1610372069960,"results":"63","hashOfConfig":"37"},{"size":862,"mtime":1610507868833,"results":"64","hashOfConfig":"37"},{"size":1189,"mtime":1608121408198,"results":"65","hashOfConfig":"37"},{"size":1560,"mtime":1608121408197,"results":"66","hashOfConfig":"37"},{"size":1485,"mtime":1609948208456,"results":"67","hashOfConfig":"37"},{"size":1950,"mtime":1609653676617,"results":"68","hashOfConfig":"37"},{"size":7201,"mtime":1609939882987,"results":"69","hashOfConfig":"37"},{"size":437,"mtime":1608121408194,"results":"70","hashOfConfig":"37"},{"size":1667,"mtime":1609653676623,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1e88sc5",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\index.js",[],["160","161"],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\reportWebVitals.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\App.js",["162"],"import './App.css';\r\nimport Signin from './pages/Signin';\r\nimport Signup from './pages/Signup';\r\nimport Signout from './pages/Signout';\r\nimport Home from './pages/Home';\r\nimport ActiveAccount from './pages/ActiveAccount';\r\nimport ForgetPassword from './pages/ForgetPassword';\r\nimport {BrowserRouter as Router,  Switch,  Route} from \"react-router-dom\";\r\nimport React from 'react'\r\nimport HistoryBox from './components/HistoryBox';\r\nimport Profile from './components/Profile';\r\nimport AnotherProfile from './components/AnotherProfile';\r\nimport CaroGameHistory from './components/CaroGameHistory';\r\nfunction App() {\r\n  \r\n  return(\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/signin\">\r\n            <Signin />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup />\r\n          </Route>\r\n          <Route exact path=\"/signout\">\r\n            <Signout />\r\n          </Route>\r\n          <Route exact path=\"/account/activate/:token\">\r\n            <ActiveAccount/>\r\n          </Route>\r\n          <Route exact path=\"/forget-password\">\r\n            <ForgetPassword/>\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile />\r\n          </Route>\r\n          <Route exact path=\"/user/:id\">\r\n            <AnotherProfile />\r\n          </Route>\r\n          <Route exact path=\"/history/:id\">\r\n            <CaroGameHistory />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n)};\r\nexport default App;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signup.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signin.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signout.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\HistoryBox.js",["163","164","165","166","167","168","169","170","171","172","173","174"],"import React,{ useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card, Button, Avatar, Box, CssBaseline, Grid, Typography, Container, TextField, GridList, CardContent, GridListTile } from '@material-ui/core';\r\nimport HistoryItem from './HistoryItem'\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridList: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        maxHeight: '655px'\r\n    },\r\n}));\r\n\r\nexport default function HistoryBox(props) { \r\n    const { history, userId } = props;\r\n    const classes = useStyles();\r\n    \r\n    if(history.length === 0) return <Typography align=\"center\" variant=\"h4\">Chưa có trận đấu nào</Typography>\r\n\r\n\treturn (\r\n        <GridList cellHeight={100} className={classes.gridList} cols={1} >\r\n            {history.reverse().map((item, index) =>\r\n                <HistoryItem key={index} index={index} item={item} userId={userId}/>\r\n            )}\r\n        </GridList>\r\n    );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ActiveAccount.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\AnotherProfile.js",["175","176","177","178","179","180","181"],"import React,{ useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Paper, Button, Avatar, Box, CssBaseline, Grid, Typography, Container, TextField, IconButton, LinearProgress } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport InfomationBox from './InfomationBox';\r\nimport HistoryBox from './HistoryBox';\r\nimport userApi from '../api/userApi';\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function AnotherProfile() { \r\n\tconst [resUser, setResUser] = useState({_id:\"\", avatar:null, email:\"\", elo:0, date:\"\", rank:\"\", game:{win:0, lose:0, total:0}, history:[]});\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { id } = useParams();\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst fetchUser = async () => {\r\n            try {\r\n                const response = await userApi.getUser(id);\r\n\t\t\t\tsetResUser(response);\r\n\t\t\t\tsetIsLoading(false);\r\n            } catch(err) {\r\n\r\n            }\r\n        }\r\n        fetchUser();\r\n\t}, []);\r\n\t\r\n\tif(isLoading) return <LinearProgress/>;\r\n\r\n\treturn (<div>{ resUser===null && (<Redirect to='/signin' />) }\r\n\t\t<CssBaseline />\r\n    \t<main>\r\n\t        <div>\r\n\t\t\t<Container maxWidth=\"md\" >\r\n\t\t\t\t<Grid container alignItems='center' justify='center'>\r\n\t\t\t\t\t<Grid item xs={1} >\r\n\t\t\t\t\t\t{/* <Link to='/'> */}\r\n\t\t\t\t\t\t\t<IconButton onClick={() => history.goBack()} style={{height: '100%'}}>\r\n\t\t\t\t\t\t\t\t<ArrowBackIcon></ArrowBackIcon>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t{/* </Link> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n\t\t\t\t\t\tThông tin người chơi\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t        </Container>\r\n\t        </div>\r\n\t        <div>\r\n\t        \t<Container >\r\n\t        \t\t<Grid container spacing={1} >\r\n\t\t\t\t\t\t<Grid item xs={3} >\r\n\t\t\t\t\t\t\t<InfomationBox user={resUser}/>\r\n\t        \t\t\t</Grid>\r\n\t        \t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" p={3} bgcolor=\"#a8adaa\" style={{marginBottom: '10px'}}>\r\n\t\t\t\t\t\t\t\t<Typography component=\"h5\" variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLịch sử đấu\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<HistoryBox history={resUser.history} userId={resUser._id}/>\r\n\t        \t\t\t</Grid>\r\n\t        \t\t</Grid>\r\n\t        \t</Container>\r\n\t        </div>\r\n        </main>\r\n\t</div>);\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Profile.js",["182","183","184","185"],"import React,{ useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Paper, Button, Avatar, Box, CssBaseline, Grid, Typography, Container, TextField, IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport userApi from '../api/userApi';\r\nimport AvatarEdit from 'react-avatar-edit';\r\nimport InfomationBox from './InfomationBox';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: theme.spacing(1),\r\n\t},\r\n\tinfomation: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: theme.spacing(2),\r\n\t},\r\n\tmarginTop: {\r\n\t\tmarginTop: '20px',\r\n\t  },\r\n}));\r\n\r\nexport default function Profile() { \r\n\tconst classes = useStyles(); \r\n\tconst [user, setUser] = useState({ name: \"\", password: \"\"});\r\n\tconst [curUser, setCurUser] = useState(JSON.parse(localStorage.getItem('curUser')));\r\n\tconst [imageSource, setImageSource] = useState(null);\r\n\tconst [avatar, setAvatar] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getUserInfo = async () => {\r\n\t\t\tconst response = await userApi.getUser(curUser._id);\r\n\t\t\tsetCurUser(response);\r\n\t\t}\r\n\t\tgetUserInfo();\r\n\t}, [])\r\n\r\n    const handleChangeName = async () =>{\r\n    \tif(user.name !== \"\")\r\n    \t{\r\n    \t\tconst response = await userApi.updateUser({ email: curUser.email, name: user.name, accessType: curUser.accessType });\r\n\t    \tsetCurUser({ ...curUser, name: user.name});\r\n\t\t\tlocalStorage.setItem('curUser', JSON.stringify({ ...curUser, name: user.name}));\r\n\t\t\tif(response.msg === \"Update successfully!\") swal(\"Cập nhập tên thành công\", \"\", \"success\");\r\n\t\t\telse swal(\"Cập nhâp tên thất bại\", \"\", \"error\");\r\n    \t}\r\n    }\r\n    const handleChangePassword = async () =>{\r\n\t\tconsole.log(user.password);\r\n\t\tif(user.password !== \"\")\r\n\t\t{\r\n\t\t\tif(user.password.length < 6) swal(\"Mật khẩu cần tối thiểu 6 ký tự\", \"\", \"warning\");\r\n\t\t\tconst response = await userApi.updateUser({ email: curUser.email, password: user.password, accessType: curUser.accessType });\r\n\t\t\tif(response.msg === \"Update successfully!\") swal(\"Cập nhập mật khẩu thành công\", \"\", \"success\");\r\n\t\t\telse swal(\"Cập nhâp mật khẩu thất bại\", \"\", \"error\");\r\n    \t}\r\n    }\r\n    const handleUploadAvatar = async ()=>{\r\n    \tawait setCurUser({ ...curUser, avatar: avatar});\r\n    \tawait localStorage.setItem('curUser', JSON.stringify({ ...curUser, avatar: avatar}));\r\n\t\tconst response = await userApi.updateUser({ email: curUser.email, avatar: avatar, accessType: curUser.accessType });\r\n    \tsetAvatar(null);\r\n    \tsetImageSource(null);\r\n    }\r\n    const onClose = () => {\r\n\t\tsetAvatar(null);\r\n\t}\r\n\r\n\tconst onCrop = (event) => {\r\n\t\tsetAvatar(event);\r\n\t}\r\n\r\n\tconst onBeforeFileLoad = (elem) => {\r\n\t\tif(elem.target.files[0].size > 71680){\r\n\t\t\tswal(\"Lỗi\", \"Kích thước ảnh lớn!\", \"error\");\r\n\t\t\telem.target.value = \"\";\r\n\t\t};\r\n\t}\r\n\r\n\treturn (<div>{ !curUser && (<Redirect to='/signin' />) }\r\n\t\t<CssBaseline />\r\n    \t<main>\r\n\t        <div>\r\n\t          <Container maxWidth=\"md\" >\r\n\t\t\t\t<Grid container alignItems='center' justify='center'>\r\n\t\t\t\t\t<Grid item xs={1} >\r\n\t\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t\t\t<IconButton style={{height: '100%'}}>\r\n\t\t\t\t\t\t\t\t<ArrowBackIcon></ArrowBackIcon>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n\t\t\t\t\t\tThông tin cá nhân\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1} >\r\n\t\t\t\t\t\t<Link to={`/user/${curUser._id}`}>\r\n\t\t\t\t\t\t\t<IconButton style={{height: '100%'}}>\r\n\t\t\t\t\t\t\t\t<ArrowForwardIcon></ArrowForwardIcon>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t          </Container>\r\n\t        </div>\r\n\t        <div>\r\n\t        \t<Container >\r\n\t        \t\t<Grid container spacing={1} >\r\n\t        \t\t\t<Grid item xs={3} >\r\n\t\t\t\t\t\t\t<InfomationBox user={curUser}/>\r\n\t        \t\t\t</Grid>\r\n\t        \t\t\t<Grid item xs={9}>\r\n\t        \t\t\t\t<Box bgcolor=\"#e0e0e0\" height={750}>\r\n\t        \t\t\t\t\t<Box display=\"flex\" justifyContent=\"left\" p={3} >\r\n\t\t\t\t\t\t\t\t\t<Typography component=\"h5\" variant=\"h5\" align=\"left\" color=\"textPrimary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\tChỉnh sửa thông tin\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t        \t\t\t\t\t<Box display=\"flex\" justifyContent=\"left\" px={5} >\r\n\t        \t\t\t\t\t\t<Grid  container spacing={3} >\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid  container spacing={3} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"name\" label=\"Tên mới\" name=\"name\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUser({ ...user, name: e.target.value})} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.marginTop} onClick={handleChangeName} fullWidth variant=\"contained\" color=\"primary\" >Thay đổi tên</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{curUser.accessType === 'email' ?\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid  container spacing={3} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Mật khẩu mới\" type=\"password\" id=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUser({ ...user, password: e.target.value})} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.marginTop} onClick={handleChangePassword} fullWidth variant=\"contained\" color=\"primary\" >Thay đổi mật khẩu</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t: <></>}\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<AvatarEdit\r\n\t\t\t\t\t\t\t\t\t\t\twidth={390}\r\n\t\t\t\t\t\t\t\t\t\t\theight={295}\r\n\t\t\t\t\t\t\t\t\t\t\tonCrop={onCrop}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={onClose}\r\n\t\t\t\t\t\t\t\t\t\t\tonBeforeFileLoad={onBeforeFileLoad}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={imageSource}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\t\r\n\t\t\t\t\t\t\t\t\t\t\t{avatar ? \r\n\t\t\t\t\t\t\t\t\t\t\t<img src={avatar} alt=\"Xem trước\" />\r\n\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Thêm ảnh để xem trước</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<form method=\"form\" onSubmit={handleUploadAvatar}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"left\" m={1} p={1} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >Đổi ảnh đại diện</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t        \t\t\t\t</Box>\r\n\t        \t\t\t</Grid>\r\n\t        \t\t</Grid>\r\n\t        \t</Container>\r\n\t        </div>\r\n        </main>\r\n\t</div>);\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ForgetPassword.js",["186"],"import React, { useEffect, useState    } from 'react';\r\nimport { Avatar, LinearProgress, Button, Typography, Grid, TextField, CssBaseline, Container, Step, Stepper, StepLabel } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport userApi from '../api/userApi';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport swal from 'sweetalert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert style={{width: '100%'}} elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(5)\r\n    },\r\n    linkProfile: {\r\n        textDecoration: 'none'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const [info, setInfo] = useState({\r\n      email: \"\", \r\n      token: \"\",\r\n      password: \"\",\r\n      retypePassword: \"\"\r\n    });\r\n    const [process, setProcess] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.forgetPassword(info.email);\r\n            if(response.result) {\r\n                setProcess(2);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            if(err.response.status === 403) swal(err.response.data.message, \"\", \"error\");\r\n            else if(err.response.status === 400) swal(err.response.data.details[0].message, \"\", \"warning\");\r\n            else swal('Server không phản hồi', \"\", \"error\");\r\n        }\r\n    };\r\n\r\n    const handleSubmitConfirmToken = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.confirmToken(info.token);\r\n            if(response.result) {\r\n                setProcess(3);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            swal('Code đặt lại mật khẩu không hợp lệ', \"\", \"error\");\r\n        }\r\n    }\r\n\r\n    const handleSubmitChangePassword = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            if(info.password !== info.retypePassword) \r\n            {\r\n                swal(\"Nhập lại mật khẩu không trùng khớp\", \"\", \"info\");\r\n                return;\r\n            }\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.resetPassword(info.token, info.password);\r\n            if(response.result) {\r\n                setProcess(4);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            if(err.response.status === 400) swal(err.response.data.details[0].message, \"\", \"warning\");\r\n            else swal('Server không phản hồi', \"\", \"error\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n            Quên mật khẩu\r\n            </Typography>\r\n            <Stepper alternativeLabel activeStep={process - 1} style={{background: '#fafafa'}}>\r\n                <Step>\r\n                    <StepLabel>Điền Email</StepLabel>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Xác nhận mã code</StepLabel>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Đặt lại mật khẩu</StepLabel>\r\n                </Step>\r\n            </Stepper>\r\n            {process === 1 ? // Điền email\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n                        Điền tài khoản (email) của bạn\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Tài khoản\" name=\"email\" autoComplete=\"email\" autoFocus \r\n                        onChange={e => setInfo({ ...info, email: e.target.value})} value={info.email}  />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Gửi code đến email của tôi\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                            Đi đến đăng nhập\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                : process === 2 ? // Điền reset code\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmitConfirmToken} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n                        Điền code đặt lại mật khẩu\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"resetCode\" label=\"Code\" name=\"Reset Code\" autoFocus \r\n                        onChange={e => setInfo({ ...info, token: e.target.value})} value={info.token}  />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Xác nhận\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                        Đi đến đăng nhập\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                : process === 3 ? // Điền mật khẩu mới\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmitChangePassword} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n                        Điền mật khẩu mới\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Mật khẩu\" type=\"password\" id=\"password\"\r\n                        onChange={e => setInfo({ ...info, password: e.target.value})} autoComplete=\"current-password\" value={info.password}/>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Nhập lại mật khẩu\" type=\"password\" id=\"repassword\"\r\n                        onChange={e => setInfo({ ...info, retypePassword: e.target.value})} value={info.retypePassword} />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Đổi mật khẩu\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                        Đi đến đăng nhập\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                :\r\n                <>\r\n                    <Alert severity=\"success\">Đặt lại mật khẩu thành công</Alert>\r\n                    <Link to='/signin' className={classes.linkProfile}>\r\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.button}>\r\n                        Đi đến đăng nhập\r\n                        </Button>\r\n                    </Link>\r\n                </>\r\n            }   \r\n        </div>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Home.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroGameHistory.js",["187","188","189","190","191"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Grid, Typography, IconButton, Container } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CaroBoard from './CaroBoard';\r\nimport Message from './MessageItem';\r\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnBold: {\r\n        fontWeight: 'bold',\r\n    },\r\n    game: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        minWidth: '705px',\r\n    },\r\n    gameInfo: {\r\n        marginLeft: '20px'\r\n    },\r\n    chatBox: {\r\n        marginLeft: '20px'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        height: 565,\r\n        backgroundColor:'#cfe8fc',\r\n        padding: '10px',\r\n    },\r\n    messList: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto',\r\n    },\r\n}));\r\n\r\nconst size = 20;\r\nconst winCondition = 5;\r\n\r\nconst CaroGameHistory = () => {\r\n    const historyPage = useHistory();\r\n    const { game } = useLocation();\r\n    const { move } = game;\r\n    let isStart = false;\r\n\r\n    let tmpArr = Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      tmpArr[i] = Array(size).fill(null);\r\n    }\r\n\r\n    const [gameConfig, setGameConfig] = useState({\r\n        width: size,\r\n        height: size,\r\n        history: [{\r\n            squares: tmpArr,\r\n            location: null\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        isDescending: true\r\n    });\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if(move[0]) setGameConfig(move[0]);\r\n    }, []);\r\n\r\n    const history = gameConfig.history;\r\n    const current = history[gameConfig.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let moves = history.map((step, move) => {\r\n        const desc = move ?\r\n        `\\\"${move%2 === 1 ? game.player1.name : game.player2.name}\\\"` \r\n        + ' đánh vào vị trí'\r\n        + ' (' + step.location.x + ',' + step.location.y + ')' :\r\n        'Bắt đầu trận đấu';\r\n        return (gameConfig.stepNumber === move) ? (\r\n            <li key={move}>\r\n                <Button className={classes.btnBold} onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        ) : (\r\n            <li key={move}>\r\n                <Button onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        );\r\n    })\r\n    if(!gameConfig.isDescending) {\r\n        moves = moves.reverse();\r\n    }\r\n\r\n    let arrow = gameConfig.isDescending ? '↓' : '↑';\r\n    let status;\r\n    if (winner) {\r\n        status = 'Người thắng cuộc: ' + `${winner.val === \"X\" ? game.player1.name + \" (X)\" : game.player2.name + \" (O)\"}`;\r\n    } else {\r\n        status = 'Lượt tiếp theo: ' + (gameConfig.xIsNext ? game.player1.name + \" (X)\" : game.player2.name + \" (O)\");\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    const handleClick = (i, j) => {\r\n        if(!isStart) return;\r\n        const newHistory = gameConfig.history.slice(0, gameConfig.stepNumber + 1);\r\n        const current = history[gameConfig.stepNumber];\r\n        const squares = current.squares.slice();\r\n\r\n        current.squares.map((row, index) => {\r\n            squares[index] = current.squares[index].slice();\r\n            return true;\r\n        });\r\n\r\n        if(squares[i][j] || calculateWinner(squares)) return;\r\n       \r\n        squares[i][j] = gameConfig.xIsNext ? 'X' : 'O';\r\n        \r\n        setGameConfig({\r\n            ...gameConfig,\r\n            history: newHistory.concat([{\r\n                squares: squares,\r\n                location: {x: i, y: j}\r\n            }]),\r\n            stepNumber: newHistory.length,\r\n            xIsNext: !gameConfig.xIsNext\r\n        });\r\n    }\r\n\r\n    const sort = () => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            isDescending: !gameConfig.isDescending\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"md\" >\r\n                <Grid container alignItems='center' justify='center'>\r\n                    <Grid item xs={1} >\r\n                            <IconButton onClick={() => historyPage.goBack()} style={{height: '100%'}}>\r\n                                <ArrowBackIcon></ArrowBackIcon>\r\n                            </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                        Xem lại trận đấu\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Grid container justify=\"center\">\r\n                <Grid item xs={1}/>\r\n                <Grid item xs={10}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} lg={5}>\r\n                            <div className={classes.game}>\r\n                                <CaroBoard\r\n                                    squares={current.squares}\r\n                                    onClick={(i, j) => handleClick(i, j)}\r\n                                    winner={winner}\r\n                                    isStart={isStart}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={3}>\r\n                            <div className={classes.gameInfo} style={{marginTop: '20px'}}>\r\n                                <div style={{display: 'flex', justifyContent: 'center', marginBottom: '20px'}}>\r\n                                    <Button onClick={sort} variant=\"outlined\">Thứ tự bước {arrow}</Button>\r\n                                </div>\r\n                                <div style={{textAlign: \"center\", color: '#fcba03'}}>{status}</div>\r\n                                <ol style={{height: '550px', overflow: 'hidden', overflowY: 'scroll'}}>{moves}</ol>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} lg={4}>\r\n                            <Typography align=\"center\" variant=\"h4\" gutterBottom style={{marginTop: '20px'}}>Tin nhắn trong trận</Typography>\r\n                            <div className={classes.root} id=\"messages\">\r\n                                <div className={classes.messList}>\r\n                                    {game.chat.map((item, index) =>\r\n                                        <Message key={index} message={item}/>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={1}/>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    let win;\r\n    for (let i = 0; i < squares.length; i++) {\r\n      for (let j = 0; j < squares[i].length; j++) {\r\n        if (!squares[i][j]) continue;\r\n        if (j <= squares[i].length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i][j + k] !== squares[i][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRight'};\r\n        }\r\n        if (i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j] !== squares[i + k + 1][j]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToDown'};\r\n        }\r\n        if (j <= squares[i].length - winCondition && i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRightDown'};\r\n        }\r\n        if (i <= squares.length - winCondition && j >= winCondition - 1) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToLeftDown'};\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default CaroGameHistory;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signup.js",["192","193"],"import React, { useState } from 'react';\r\nimport { Avatar, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container, LinearProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport userApi from '../api/userApi';\r\nimport swal from 'sweetalert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\", name: \"\"});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [repassword, setRepassword] = useState(\"\");\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      if(user.password !== repassword)\r\n      {\r\n        swal(\"Nhập lại mật khẩu không trùng khớp\", \"\", \"info\");\r\n        setIsLoading(false);\r\n      }else{\r\n        const response = await userApi.signup(user);\r\n        swal(response.message, \"\", \"success\");\r\n        setIsLoading(false);\r\n        setIsRedirect(true);\r\n      }\r\n    }catch(err){\r\n      setIsLoading(false);\r\n      if(err.response.status === 400) swal(err.response.data.details[0].message, \"\", \"warning\");\r\n      else if(err.response.status === 401) swal(err.response.data.message, \"\", \"error\");\r\n      else if(err.response.status === 403) swal(err.response.data.message, \"\", \"error\");\r\n      else swal(\"Server không phản hồi\", \"\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/signin' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Đăng ký\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"name\" label=\"Tên của bạn\" name=\"name\" \r\n            onChange={e => setUser({ ...user, name: e.target.value})} />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Tên đăng nhập (Email)\" name=\"email\" autoComplete=\"email\" \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Mật khẩu\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Nhập lại mật khẩu\" type=\"password\" id=\"repassword\"\r\n            onChange={e => setRepassword(e.target.value)} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Đăng ký\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to=\"/signin\" variant=\"body2\">\r\n                Bạn đã có tài khoản? Đăng nhập\r\n              </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signin.js",["194","195"],"import React, { useState    } from 'react';\r\nimport { Avatar, LinearProgress, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Facebook from './Facebook'\r\nimport Google from './Google'\r\nimport userApi from '../api/userApi';\r\nimport swal from 'sweetalert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\"});\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const setRedirectTrue = ()=>{\r\n    setIsRedirect(true);\r\n  }\r\n  const setIsLoadingTrue = ()=> {\r\n    setIsLoading(true);\r\n  }\r\n  const setIsLoadingFalse = ()=> {\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      const response = await userApi.signin(user);\r\n      if(response.token) {\r\n          localStorage.setItem('login', JSON.stringify({\r\n            login:true,\r\n            token:response.token,\r\n          }));\r\n          const curUser = await userApi.getCurUser();   \r\n          localStorage.setItem('curUser', JSON.stringify(curUser));\r\n        setIsLoading(false);\r\n        setIsRedirect(true);\r\n      } else {\r\n          swal(response.message, \"\", \"error\");\r\n      }\r\n    } catch(err) {\r\n      setIsLoading(false);\r\n      if(err.response.status === 400) swal(err.response.data.details[0].message, \"\", \"warning\");\r\n      else if(err.response.status === 401) swal(err.response.data.message, \"\", \"error\");\r\n      else if(err.response.status === 403) swal(err.response.data.message, \"\", \"error\");\r\n      else swal(\"Server không phản hồi\", \"\", \"error\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Đăng nhập\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Tài khoản\" name=\"email\" autoComplete=\"email\" autoFocus \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Mật khẩu\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} autoComplete=\"current-password\" />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <Grid container mb={2} className={classes.submit}>\r\n            <Grid item xs >\r\n              <Facebook setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n            <Grid item>\r\n              <Google setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/forget-password\" variant=\"body2\">\r\n                Quên mật khẩu?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Bạn chưa có tài khoản? Đăng ký\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\InfomationBox.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\userApi.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroBoard.js",["196"],"import React from 'react';\r\nimport CaroSquare from './CaroSquare';\r\nimport CaroRow from './CaroRow';\r\n\r\nconst CaroBoard = ({ squares, onClick, winner, isStart }) => {\r\n    const board = squares.map((row, index) => <CaroRow winner={winner} rowIdx={index} row={row} onClick={onClick} isStart={isStart} key={\"r\" + index}/>);\r\n    const renderSquare = (i) => <CaroSquare value={squares[i]} onClick={() => onClick(i)}/>;\r\n\r\n    return (\r\n        <div>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CaroBoard;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\HistoryItem.js",["197","198","199","200"],"import React,{ useState } from 'react';\r\nimport Moment from 'react-moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { Card, Button, Grid, Typography, Container, CardContent, CardActions, CardHeader } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backgroundWin: {\r\n        backgroundColor: 'cyan'\r\n    },\r\n    bold: {\r\n        fontWeight: 'bold'\r\n    },\r\n    cardItem_win: {\r\n        width: '100%',\r\n        marginBottom: '10px',\r\n        backgroundColor: '#3af082'\r\n    },\r\n    cardItem_lose: {\r\n        width: '100%',\r\n        marginBottom: '10px',\r\n        backgroundColor: '#ed2b5b'\r\n    },\r\n    cardItem_draw: {\r\n        width: '100%',\r\n        marginBottom: '10px',\r\n        backgroundColor: '#d1cdce'\r\n    },\r\n}));\r\n\r\nexport default function HistoryItem(props) {\r\n    const { item, index, userId } = props;\r\n    const classes = useStyles();\r\n    const playerPosition = userId === item.player1.id ? 1 : 2;\r\n    let matchResult = 0; // 0 hòa - 1 win - 2 thua\r\n\r\n    if(item.winner === 0) matchResult = 0;\r\n    else if(playerPosition === item.winner) matchResult = 1;\r\n    else matchResult = 2;\r\n\r\n    switch(matchResult) {\r\n        case 0: \r\n            return (\r\n                <Card className={classes.cardItem_draw} variant=\"outlined\">\r\n                    <CardContent>\r\n                        <Typography align=\"left\" variant=\"caption\" gutterBottom>\r\n                            #{index + 1}\r\n                        </Typography>\r\n                        <Typography align=\"center\" variant=\"h4\" style={{color: '#8c898a'}} gutterBottom>\r\n                            Hòa\r\n                        </Typography>\r\n                        <Grid container>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Người chơi</Typography>\r\n                                <Typography align=\"center\" className={playerPosition === 1 ? classes.bold : null}>Người chơi X: {item.player1.name}</Typography>\r\n                                <Typography align=\"center\" className={playerPosition === 2 ? classes.bold : null}>Người chời O: {item.player2.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Thời gian</Typography>\r\n                                <Typography align=\"center\">\r\n                                    <Moment format=\"hh:mm\">\r\n                                        {item.date}\r\n                                    </Moment>\r\n                                </Typography>\r\n                                <Typography align=\"center\">\r\n                                    <Moment format=\"DD/MM/YYYY\">\r\n                                        {item.date}\r\n                                    </Moment>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Số nước đi</Typography>\r\n                                <Typography align=\"center\">{item.move[0] ? item.move[0].history.length - 1 : \"0\"}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Link to= {{\r\n                            pathname: `/history/${item._id}`,\r\n                            game: item\r\n                        }} style={{width: '100%', textDecoration:'none'}}>\r\n                            <Button fullWidth style={{backgroundColor: '#8c898a'}} variant=\"contained\">Chi tiết</Button>\r\n                        </Link>\r\n                    </CardActions>\r\n                </Card>\r\n            )\r\n            case 1: \r\n                return (\r\n                    <Card className={classes.cardItem_win} variant=\"outlined\">\r\n                    <CardContent>\r\n                        <Typography align=\"left\" variant=\"caption\" gutterBottom>\r\n                            #{index + 1}\r\n                        </Typography>\r\n                        <Typography align=\"center\" variant=\"h4\" style={{color: '#2bba64' }} gutterBottom>\r\n                            Chiến thắng\r\n                        </Typography>\r\n                        <Grid container>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Người chơi</Typography>\r\n                                <Typography align=\"center\" className={playerPosition === 1 ? classes.bold : null}>Người chơi X: {item.player1.name}</Typography>\r\n                                <Typography align=\"center\" className={playerPosition === 2 ? classes.bold : null}>Người chời O: {item.player2.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Thời gian</Typography>\r\n                                <Typography align=\"center\">\r\n                                    <Moment format=\"hh:mm\">\r\n                                        {item.date}\r\n                                    </Moment>\r\n                                </Typography>\r\n                                <Typography align=\"center\">\r\n                                    <Moment format=\"DD/MM/YYYY\">\r\n                                        {item.date}\r\n                                    </Moment>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Số nước đi</Typography>\r\n                                <Typography align=\"center\">{item.move[0] ? item.move[0].history.length - 1 : \"0\"}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Link to= {{\r\n                                pathname: `/history/${item._id}`,\r\n                                game: item\r\n                            }} style={{width: '100%', textDecoration:'none'}}>\r\n                            <Button fullWidth style={{backgroundColor: '#2bba64'}} variant=\"contained\">Chi tiết</Button>\r\n                        </Link>\r\n                    </CardActions>\r\n                </Card>\r\n                )\r\n            case 2: \r\n                return (\r\n                    <Card className={classes.cardItem_lose} variant=\"outlined\">\r\n                    <CardContent>\r\n                        <Typography align=\"left\" variant=\"caption\" gutterBottom>\r\n                            #{index + 1}\r\n                        </Typography>\r\n                        <Typography align=\"center\" variant=\"h4\" style={{color: '#911332'}} gutterBottom>\r\n                            Thua cuộc\r\n                        </Typography>\r\n                        <Grid container>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Người chơi</Typography>\r\n                                <Typography align=\"center\" className={playerPosition === 1 ? classes.bold : null}>Người chơi X: {item.player1.name}</Typography>\r\n                                <Typography align=\"center\" className={playerPosition === 2 ? classes.bold : null}>Người chời O: {item.player2.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Thời gian</Typography>\r\n                                <Typography align=\"center\">\r\n                                    <Moment format=\"hh:mm\">\r\n                                        {item.date}\r\n                                    </Moment>\r\n                                </Typography>\r\n                                <Typography align=\"center\">\r\n                                    <Moment format=\"DD/MM/YYYY\">\r\n                                        {item.date}\r\n                                    </Moment>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography align=\"center\" variant=\"h6\">Số nước đi</Typography>\r\n                                <Typography align=\"center\">{item.move[0] ? item.move[0].history.length - 1 : \"0\"}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Link to= {{\r\n                                pathname: `/history/${item._id}`,\r\n                                game: item\r\n                            }} style={{width: '100%', textDecoration:'none'}}>\r\n                            <Button fullWidth style={{backgroundColor: '#911332'}} variant=\"contained\">Chi tiết</Button>\r\n                        </Link>\r\n                    </CardActions>\r\n                </Card>\r\n                )\r\n        default: \r\n            break;\r\n    }\r\n\r\n    return (<></>);\r\n}\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\TopBar.js",["201","202","203","204","205","206","207","208","209"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport {Card, AppBar, Button, Toolbar, Typography, IconButton, MenuItem, Menu, Avatar, Link } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport io from 'socket.io-client'\r\nimport userApi from '../api/userApi';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  bottom_space: {\r\n      marginBottom: 12, \r\n  },\r\n  title: {\r\n      flexGrow: 1,\r\n  },\r\n  logoutButton: {\r\n      marginLeft: 10,\r\n  },\r\n  link: {\r\n      textDecoration: 'none',\r\n      flexGrow: 1,\r\n  },\r\n  linkProfile: {\r\n      textDecoration: 'none',\r\n      \"&:hover\": {\r\n        textDecoration: 'none',\r\n      }\r\n  },\r\n  large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n  },\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n  const classes = useStyle();\r\n  const isLoggedIn = props.isLogin;\r\n  let curUser = null;\r\n\r\n  if(localStorage.getItem('curUser')) curUser = JSON.parse(localStorage.getItem('curUser'));\r\n\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n      }\r\n\r\n      setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n    event.preventDefault();\r\n    setOpen(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n          >\r\n              { curUser ?\r\n              <Avatar alt=\"avatar\" src={curUser.avatar}></Avatar>\r\n              :\r\n              <AccountCircleIcon fontSize=\"large\"/> \r\n              }\r\n          </Button>\r\n          <Typography variant=\"h6\" className=\"title\">\r\n            {curUser ? curUser.name : \"\"}\r\n          </Typography>\r\n          <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n              <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n              <Paper>\r\n                  <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                      <Link href='/profile' className={classes.linkProfile}>\r\n                          <MenuItem onClick={handleClose}>Thông tin</MenuItem>\r\n                      </Link>\r\n                      <Link href='/signout' className={classes.linkProfile}>\r\n                          <MenuItem onClick={handleClose}>Đăng xuất</MenuItem>\r\n                      </Link>\r\n                  </MenuList>\r\n                  </ClickAwayListener>\r\n              </Paper>\r\n              </Grow>\r\n          )}\r\n          </Popper>\r\n        </Toolbar>\r\n      </AppBar>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageItem.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageList.js",["210","211"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    margin: theme.spacing(2, 2),\r\n    width: 400,\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n//    position: 'fixed',\r\n  },\r\n  messlist: {\r\n    flexGrow: 1,\r\n    width: '92%',\r\n    height: '75%',\r\n    overflow: 'scroll',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  searchIcon: {\r\n  \tmargin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n\tconst classes = useStyles();\r\n\tconst [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\tconst messagesEndRef = useRef(null);\r\n    const {socket} = props;\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const { isLogin} = props;\r\n    if(isLogin !== true)\r\n    {\r\n        setIsRedirect(true);\r\n    }\r\n\r\n\r\n\tconst addMessages = () => {\r\n\t\t//setMessages(m => [...m, {name: \"Vinh\", message:\"hhaha\"}]);\r\n        if(message!==\"\"){\r\n            setMessages(m => [...m, {name: getUserName(), message:message}]);\r\n            setMessage(\"\");\r\n        }\r\n\t};\r\n    const getUserName = () =>\r\n    {\r\n        if( localStorage.getItem('curUser')){\r\n            return JSON.parse(localStorage.getItem('curUser')).name;\r\n        }\r\n        else return 0;\r\n    }\r\n    const sendNewMessage = ()=> {\r\n        const name = getUserName();\r\n        socket.emit(\"newMessage\", {message: message, name: name}); //gửi event về server\r\n        setMessage(\"\");\r\n    }\r\n\r\n\r\n\tuseEffect(()=>{\r\n        socket.on('newMessage',response => {\r\n            setMessages(draft => [ ...draft, {name: response.name, message:response.message}])});\r\n        // messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n\r\n    return (\r\n        <div>\r\n        { (isRedirect === true) ? (<Redirect to='/signin' />) :(\r\n        <div className={classes.root} id=\"messages\"\t>\r\n            <div className={classes.messlist}>\r\n                {messages.map((item, index) =>\r\n                    <Message key={index} message={item}/>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n        \t<div className={classes.searchIcon}>\r\n      \t\t\t<TextField fullWidth id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message}/>\r\n                <button onClick={sendNewMessage}>\r\n    \t\t\t\t<SendIcon color=\"primary\" />\r\n    \t\t\t</button>\r\n    \t\t</div>\r\n        </div>\r\n        )\r\n    }\r\n    </div>\r\n    )\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\TopPlayer.js",["212","213"],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Dashboard.js",["214","215","216","217","218","219","220","221"],"import React,{useState, useEffect} from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {Card,CardContent,Table,TableBody ,TableCell ,TableContainer ,TableHead ,Paper ,TableRow ,\r\nTablePagination, Grid, Button,Modal,Input, CardActions, TextField } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Redirect, useHistory, Link} from 'react-router-dom';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport swal from 'sweetalert';\r\nimport loading from \"./loading.svg\"\r\n//styles setting\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\n\r\n\r\n//function component\r\nexport default function Dashboard(props) {\r\n  const history = useHistory();\r\n  const [usersOnline,setUsersOnline] = useState([]);\r\n  const [playRooms,setPlayRooms] = useState([]);\r\n  const isLoggedIn = props.isLogin;\r\n  const socket = props.socket;\r\n  const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n  const classes = useStyles();\r\n  \r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [openCreateRoomModal, setOpenCreateRoomModal] = useState(false);\r\n  const [openJoinRoomModal, setOpenJoinRoomModal] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [roomDialog, setRoomDialog] = useState({});\r\n  const [roomDialogPlayer1,setRoomDialogPlayer1] = useState({});\r\n  const [roomDialogPlayer2,setRoomDialogPlayer2] = useState({});\r\n  const [newRoomType,setNewRoomType] = useState('unlock');\r\n  const [newRoomPassword,setNewRoomPassword] = useState('');\r\n  const [newRoomTimePerRound,setNewRoomTimePerRound] = useState('50');\r\n  const [joinRoomPassword,setJoinRoomPassword] = useState('');\r\n  const [roomSelected,setRoomSelected] = useState({});\r\n  const [idJoinRoom, setIdJoinRoom] = useState('')\r\n  const [isFindQuickGame,setIsFindQuickGame] = useState(false);\r\n  const [isAcceptInvite,setIsAcceptInvite] = useState({\"isaccept\":false,\"room\":null});\r\n  const [customTPR, setCustomTPR] = useState(false);\r\n  const handleNewRoomTypeChange = (event) => {\r\n    setNewRoomType(event.target.value);\r\n  };\r\n\r\n  const handleNewRoomTimePerRoundChange = (event) => {\r\n    if(event.target.value === \"custom\") {\r\n      setCustomTPR(true);\r\n      setNewRoomTimePerRound(\"5\");\r\n    } else {\r\n      setCustomTPR(false);\r\n      setNewRoomTimePerRound(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleNewRoomPasswordChange = (event) => {\r\n    setNewRoomPassword(event.target.value);\r\n  }\r\n\r\n  const handleJoinRoomPasswordChange = (event) => {\r\n    setJoinRoomPassword(event.target.value);\r\n  }\r\n\r\n  const handleIdJoinRoomChange= (event) => {\r\n    setIdJoinRoom(event.target.value);\r\n  }\r\n\r\n  const handleClickOpenDialog = (room) => {\r\n    setOpenDialog(true);\r\n    setRoomDialog(room);\r\n    setRoomDialogPlayer1(room.player1);\r\n    setRoomDialogPlayer2(room.player2);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleOpenCreateRoomModal= () => {\r\n    setOpenCreateRoomModal(true);\r\n    setNewRoomPassword('');\r\n    setNewRoomType('unlock');\r\n    setNewRoomTimePerRound('50');\r\n  }\r\n\r\n  const handleCloseCreateRoomModal= () => {\r\n    setOpenCreateRoomModal(false);\r\n    setNewRoomPassword('');\r\n    setNewRoomType('unlock');\r\n  }\r\n\r\n  const handleOpenJoinRoomModal= () => {\r\n    setOpenJoinRoomModal(true);\r\n  }\r\n\r\n  const handleCloseJoinRoomModal= () => {\r\n    setOpenJoinRoomModal(false);\r\n    setJoinRoomPassword('');\r\n    setRoomSelected({});\r\n  }\r\n\r\n  if(isLoggedIn === true)\r\n  {\r\n    if(curUser!==null){\r\n      socket.emit(\"login\", {\r\n        id: curUser._id, \r\n        name: curUser.name\r\n      }); \r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    socket.on('updateUsersOnlineList', (response) => setUsersOnline(response)); \r\n    socket.on('updateRoomsList',  (response) => setPlayRooms(response));\r\n    socket.on('inviteToPlay', (response) => {\r\n      if(response.invitePlayerId === curUser._id)\r\n      {\r\n        swal({\r\n          title: \"Bạn nhận được lời mời?\",\r\n          text: \"Người chơi \" + response.playerInviteName + \" mời bạn vào room \" + response.room + \"!\",\r\n          icon: \"warning\",\r\n          buttons: {\r\n            cancel: \"Từ chối\",\r\n            catch: {\r\n              text: \"Chấp nhận\",\r\n              value: \"accept\",\r\n            }},\r\n          dangerMode: false,\r\n        })\r\n        .then((value) => {\r\n          if(value === \"accept\")\r\n          {\r\n            setIsAcceptInvite({\"isaccept\":true,\"room\":response.room});\r\n          }     \r\n        });\r\n      }});\r\n    socket.on('findedQuickGame',  (response) => {\r\n      if(response.idPlayer1 === curUser._id || response.idPlayer2 === curUser._id)\r\n      {\r\n        setIsFindQuickGame(false);\r\n        joinRoom(response.idRoom,'unlock',null);\r\n        swal.close();\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n  const createRoom = () => {\r\n    if(Number.parseInt(newRoomTimePerRound) < 5) swal(\"Thời gian tối thiểu là 5 giây\", \"\", \"warning\");\r\n    else if (Number.parseInt(newRoomTimePerRound) > 200) swal(\"Thời gian tối đa là 200 giây\", \"\", \"warning\");\r\n    else {\r\n      socket.emit(\"createRoom\", {'hostName':curUser.name,'newRoomType':newRoomType,'newRoomPassword':newRoomPassword,'newRoomTimePerRound':newRoomTimePerRound});\r\n      socket.emit(\"joinRoom\",  {\"roomId\":(playRooms.length + 1),\"playerId\":curUser._id});\r\n      const path = (playRooms.length + 1).toString();\r\n      history.push(path);\r\n    }\r\n  }\r\n\r\n  const joinRoom = (id,roomType,roomPassword) => {\r\n    if(roomType === 'unlock')\r\n    {\r\n      socket.emit(\"joinRoom\", {\"roomId\":id,\"playerId\":curUser._id});\r\n      const path = id.toString();\r\n      history.push(path);\r\n    }\r\n    else \r\n    {\r\n      handleOpenJoinRoomModal();\r\n      setRoomSelected({'id':id,'password':roomPassword});\r\n    }\r\n  }\r\n\r\n  const joinLockRoom = () =>{\r\n    if(joinRoomPassword === roomSelected.password)\r\n    {\r\n      socket.emit(\"joinRoom\", {\"roomId\":roomSelected.id,\"playerId\":curUser._id});\r\n      const path = roomSelected.id.toString();\r\n      history.push(path);\r\n    }\r\n    else {\r\n      swal(\"Ôi không!\", \"Password không chính xác!\", \"error\");\r\n    }\r\n  }\r\n\r\n  const joinRoomById = () =>{\r\n    for (let a=0; a < playRooms.length; a++) {\r\n      if (playRooms[a].roomId == idJoinRoom) {\r\n        joinRoom(playRooms[a].roomId,playRooms[a].type,playRooms[a].password)\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const leaveRoom = () =>{\r\n    socket.emit(\"leaveRoom\", curUser._id);\r\n  };\r\n\r\n  const quickPlay = () =>{\r\n    socket.emit(\"joinQuickGame\", {\"id\":curUser._id,\"elo\":curUser.elo});\r\n    setIsFindQuickGame(true);\r\n    swal({\r\n      title: \"Chơi nhanh\",\r\n      text: \"Đang tiến hành ghép cặp...\",\r\n      icon: loading,\r\n      button: \"Hủy\",\r\n      dangerMode: true,\r\n    }).then(() => {\r\n      setIsFindQuickGame(false);\r\n      socket.emit(\"outQuickGame\", {\"id\":curUser._id});\r\n    });\r\n  }\r\n\r\n  if(isAcceptInvite.isaccept === true)\r\n  {\r\n    for (let a=0; a < playRooms.length; a++) {\r\n      if (playRooms[a].roomId == isAcceptInvite.room) {\r\n        joinRoom(playRooms[a].roomId,playRooms[a].type,playRooms[a].password);\r\n\r\n        break;\r\n      }\r\n    }\r\n    setIsAcceptInvite({\"isaccept\":false,\"room\":null});\r\n\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {!isLoggedIn ? <Redirect to=\"/signin\"/>: \r\n            <div>\r\n              <div style={{textAlign: 'center',padding:'10px'}}>\r\n                <Button style={{marginRight:'30px',backgroundColor:\"green\"}} variant=\"contained\" color=\"primary\" onClick={() => quickPlay()} >Chơi nhanh</Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handleOpenCreateRoomModal()} >Tạo phòng mới</Button>\r\n                <Input style={{marginLeft:'30px',marginRight:'10px'}} placeholder=\"Nhập ID phòng\" onChange={handleIdJoinRoomChange}></Input> \r\n                <Button variant=\"contained\"  onClick={() => joinRoomById()} >Tham gia</Button>\r\n              </div>\r\n              <Grid container >\r\n                <Grid item xs={12}>\r\n                  <Grid container justify=\"center\" >\r\n                  <TableContainer style={{width:'60%'}} component={Paper}>\r\n                    <Table >\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <StyledTableCell>ID room</StyledTableCell>\r\n                          <StyledTableCell align=\"center\">Người tạo</StyledTableCell>\r\n                          <StyledTableCell align=\"center\">Trạng thái</StyledTableCell>\r\n                          <StyledTableCell align=\"center\">Loại phòng</StyledTableCell>\r\n                          <StyledTableCell align=\"center\"></StyledTableCell>\r\n                          <StyledTableCell align=\"center\"></StyledTableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                      {playRooms.map((room) => (\r\n                        <StyledTableRow key={room.roomId} >\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {room.roomId}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">{room.hostName}</StyledTableCell>\r\n                          <StyledTableCell align=\"center\">{room.status === 0 ? 'đang chờ' : 'đã chơi'}</StyledTableCell>\r\n                          <StyledTableCell align=\"center\" style={{color: room.type === 'lock' ? 'red' : 'blue'}}>{room.type === 'lock' ? 'Khóa' : 'Không khóa'}</StyledTableCell>\r\n                          <StyledTableCell align=\"center\"><Button color=\"primary\" onClick={() => joinRoom(room.roomId,room.type,room.password)}>Tham gia</Button></StyledTableCell>\r\n                          <StyledTableCell align=\"center\"><Button color=\"primary\" onClick={() => handleClickOpenDialog(room)}>Thông tin</Button></StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                    <Card style={{margin:'10px'}}>\r\n                      <CardContent style={{textAlign: 'left'}}>\r\n                      <h2>List Users Online</h2>\r\n                      {usersOnline.map(item =>\r\n                            <li key={item.userId}><Button href={'/user/'+item.userId} size=\"small\" style={{textTransform: 'none'}}>{item.userName}</Button></li>\r\n                      )}\r\n                      </CardContent>\r\n                      <CardActions>\r\n                          <Button href='/topPlayers' fullWidth color=\"secondary\">\r\n                              Bảng xếp hạng\r\n                          </Button>\r\n                      </CardActions>\r\n                    </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n\r\n                {/* Room information dialog */}\r\n                <Dialog  onClose={handleCloseDialog} aria-labelledby=\"customized-dialog-title\" open={openDialog}>\r\n                  <DialogTitle style = {{width:'300px'}} id=\"customized-dialog-title\" onClose={handleCloseDialog}>\r\n                    Thông tin chi tiết\r\n                  </DialogTitle>\r\n                  <DialogContent dividers>\r\n                    <Typography gutterBottom>\r\n                      <p style={{fontWeight: 'bold', display: 'inline'}}>Room:</p> {roomDialog.roomId}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                      <p style={{fontWeight: 'bold', display: 'inline'}}>Người tạo:</p>  {roomDialog.hostName}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                      <p style={{fontWeight: 'bold', display: 'inline'}}>Trạng thái:</p>  {roomDialog.status === 0 ? 'đang chờ' : 'đã chơi'}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                      <p style={{fontWeight: 'bold', display: 'inline'}}>Loại phòng:</p>  {roomDialog.type === 'unlock' ? 'không khóa' : 'khóa'}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                      <p style={{fontWeight: 'bold', display: 'inline'}}>Player 1:</p>  {roomDialogPlayer1.name === null ? 'chưa vào' : roomDialogPlayer1.name}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                      <p style={{fontWeight: 'bold', display: 'inline'}}>Player 2:</p>  {roomDialogPlayer2.name === null ? 'chưa vào' : roomDialogPlayer2.name}\r\n                    </Typography>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseDialog} color=\"primary\">\r\n                      Đóng\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n                {/* Create New Room Modal */}\r\n                  <Modal\r\n                    open={openCreateRoomModal}\r\n                    onClose={handleCloseCreateRoomModal}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                  >\r\n                    <div  style={modalStyle} className={classes.paper}>\r\n                      <h2 >Tạo phòng chơi mới</h2>\r\n                      <p >\r\n                        Vui lòng chọn loại phòng chơi muốn tạo:\r\n                      </p>\r\n                      <RadioGroup aria-label=\"gender\" name=\"gender1\" value={newRoomType} onChange={handleNewRoomTypeChange}>\r\n                        <FormControlLabel value=\"unlock\" control={<Radio />} label=\"Phòng mở\" />\r\n                        <FormControlLabel value=\"lock\" control={<Radio />} label=\"Phòng khóa\" />\r\n                      </RadioGroup>\r\n                      <Input placeholder=\"Nhập password\" onChange={handleNewRoomPasswordChange}></Input> \r\n                      <div style={{alignItems: 'center'}}>\r\n                      <p >\r\n                        Vui lòng chọn thời gian giới hạn mỗi lượt:\r\n                      </p>\r\n                      <RadioGroup aria-label=\"gender\" name=\"gender2\" defaultValue=\"50\" onChange={handleNewRoomTimePerRoundChange}>\r\n                        <FormControlLabel value=\"50\" control={<Radio />} label=\"50 giây\" i/>\r\n                        <FormControlLabel value=\"100\" control={<Radio />} label=\"100 giây\" />\r\n                        <FormControlLabel value=\"150\" control={<Radio />} label=\"150 giây\" />\r\n                        <FormControlLabel value=\"custom\" control={<Radio />} label=\"Tự quy định\" />\r\n                        {customTPR ? <Input placeholder=\"Thời gian (tối thiểu 5 giấy, tối đa 200 giây)\" value={newRoomTimePerRound} onChange={(e) => setNewRoomTimePerRound(e.target.value)}/> : <></>}\r\n                      </RadioGroup>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={() => createRoom()} style={{margin:'10px'}}>Tạo phòng</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Modal>\r\n\r\n\r\n                {/* Join Room Modal */}\r\n                <div>\r\n                  <Modal\r\n                    open={openJoinRoomModal}\r\n                    onClose={handleCloseJoinRoomModal}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                  >\r\n                    <div style={modalStyle} className={classes.paper}>\r\n                      <h2 >Tham gia phòng</h2>\r\n                      <p >\r\n                        Vui lòng nhập mật khẩu phòng:\r\n                      </p>\r\n                      <Input placeholder=\"Nhập password\" onChange={handleJoinRoomPasswordChange}></Input> \r\n                      <div style={{alignItems: 'center'}}>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={() => joinLockRoom()} style={{margin:'10px'}}>Xác nhận</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Modal>\r\n                </div>\r\n            </div>\r\n          }\r\n    </div>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Room.js",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React,{ useState, useEffect} from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Card, CardContent, Grid, Link, Button,Paper, Box, CardHeader, CardActions} from '@material-ui/core';\r\nimport swal from 'sweetalert';\r\nimport CaroGame from './CaroGame';\r\nimport MessageRoom from '../components/MessageRoom';\r\nimport CountDown from './CountDown';\r\nimport { RoomOutlined } from '@material-ui/icons';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport loading from \"./loading.svg\"\r\n\r\n//setting dialog styles\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n  });\r\n  \r\n  const DialogContent = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiDialogContent);\r\n  \r\n  const DialogActions = withStyles((theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1),\r\n    },\r\n  }))(MuiDialogActions);\r\n\r\n//function room\r\nexport default function Room(props) {    \r\n    const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n    const socket = props.socket;\r\n    const roomID = useParams().id;\r\n    const [isLeaving, setIsLeaving] = useState(false);\r\n    const [openInviteDialog, setOpenInviteDialog] = useState(false);\r\n    const [usersOnline, setUsersOnline] = useState([]);\r\n\r\n    const [room, setRoom] = useState({\r\n        roomId: null,\r\n        hostName: null,\r\n        status: null,\r\n        nextTurn: 1,\r\n        type: \"\",\r\n        password: \"\",\r\n        timePerRound: \"50\",\r\n        player1: {\r\n            id: null,\r\n            name: null\r\n        },\r\n        player2: {\r\n            id: null,\r\n            name: null\r\n        },\r\n        curGame: null,\r\n        chat: [],\r\n    });\r\n    const [isEndGame, setIsEndGame] = useState(true);\r\n    const [duration, setDuration] = useState(parseInt(room.timePerRound));\r\n    const [changeKey, setChangeKey] = useState(1);\r\n\r\n    useEffect(()=>{\r\n        socket.on('roomJoined',  response => {setRoom(response)});\r\n        socket.on('roomUpdated', response => {setRoom(response)});\r\n        socket.on('gameResult', response => showGameResult(response));\r\n        socket.on('updateUsersOnlineList', (response) => setUsersOnline(response)); \r\n        socket.on('setTimer', response => { setDuration(parseInt(response.duration)); setChangeKey(changeKey + 1); });\r\n        socket.on('getDrawRequest', response => handleGetDrawRequest(response));\r\n        socket.on('answerDrawRequest', response => handleAnswerDrawRequest(response));\r\n    }, [room]);\r\n\r\n    const joinPlayer = (position) =>{\r\n        if(position === 1 && room.player2.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 1 && room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                },\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                },\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n    }\r\n\r\n    const leavePlayer = () => {\r\n        if(room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n        if(room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleLeaveRoom = () => {\r\n        console.log('from leave room', room);\r\n        if(room.status === 1 && (curUser._id === room.player1.id || curUser._id === room.player2.id)) {\r\n            swal({\r\n                title: \"Bạn có chắc thoát trong khi đang chơi ?\",\r\n                text: \"Bạn sẽ bị sử thua nếu thoát trận\",\r\n                icon: \"warning\",\r\n                buttons: {\r\n                    confirm: {\r\n                        text: \"Xác nhận\",\r\n                        value: \"confirm\"\r\n                    },\r\n                    cancel: \"Không\"\r\n                },\r\n            })\r\n            .then((value) => {\r\n                if(value === \"confirm\") {\r\n                    socket.emit(\"gameResult\", {\r\n                        room: {\r\n                            ...room,\r\n                            status: 0\r\n                        },\r\n                        winner: curUser._id === room.player1.id ? 2 : 1,\r\n                        resultType: \"winLose\" // Còn 1 type nữa là \"draw\"\r\n                    });\r\n                    socket.emit(\"leaveRoom\", curUser._id);\r\n                    setIsLeaving(true);\r\n                }\r\n            });\r\n        } else {\r\n            socket.emit(\"leaveRoom\", curUser._id);\r\n            setIsLeaving(true);\r\n        }\r\n    }\r\n\r\n    const handlePlay = () => {\r\n        if(room.player1.id === null || room.player2.id === null) swal(`Room ${room.roomId}`, 'Cần 2 người chơi để bắt đầu', \"error\");\r\n        else if(curUser._id === room.player1.id || curUser._id === room.player2.id) {\r\n            socket.emit(\"startGame\", {\r\n                ...room,\r\n                nextTurn: 1,\r\n                status: 1,\r\n                curGame: {\r\n                    date: Date.now,\r\n                    player1: {\r\n                        id: room.player1.id,\r\n                        name: room.player1.name\r\n                    },\r\n                    player2: {\r\n                        id: room.player2.id,\r\n                        name: room.player2.name\r\n                    },\r\n                    winner: 0,\r\n                    move: [],\r\n                    chat: []\r\n                }\r\n            });\r\n        }\r\n        else swal(`Room ${room.roomId}`, 'Bạn phải là một trong hai người chơi chính để thực hiện chức năng này', \"error\");\r\n    } \r\n\r\n    const handleDefeat = () => {\r\n        if(curUser._id === room.player1.id || curUser._id === room.player2.id) {\r\n            swal({\r\n                title: \"Bạn có chắc chắn đầu hàng trước đối thủ ?\",\r\n                icon: \"warning\",\r\n                buttons: {\r\n                    confirm: {\r\n                        text: \"Xác nhận\",\r\n                        value: \"confirm\"\r\n                    },\r\n                    cancel: \"Không\"\r\n                },\r\n            })\r\n            .then((value) => {\r\n                if(value === \"confirm\") {\r\n                    socket.emit(\"gameResult\", {\r\n                        room: {\r\n                            ...room,\r\n                            status: 0\r\n                        },\r\n                        winner: curUser._id === room.player1.id ? 2 : 1,\r\n                        resultType: \"winLose\" // Còn 1 type nữa là \"draw\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else swal(`Room ${room.roomId}`, 'Bạn phải là một trong hai người chơi chính để thực hiện chức năng này', \"error\");\r\n    }\r\n\r\n    const handleDraw = () => {\r\n        if(curUser._id === room.player1.id || curUser._id === room.player2.id) {\r\n            socket.emit(\"drawRequest\", {\r\n                roomId: room.roomId,\r\n                from: curUser._id === room.player1.id ? 1 : 2\r\n            });\r\n            swal({\r\n                title: \"Xin hòa\",\r\n                text: \"Đang đợi đối thủ chấp nhận hòa...\",\r\n                icon: loading,\r\n                button: \"Hủy\",\r\n                dangerMode: true,\r\n            });\r\n        }\r\n        else swal(`Room ${room.roomId}`, 'Bạn phải là một trong hai người chơi chính để thực hiện chức năng này', \"error\");\r\n    }\r\n\r\n    const handleGetDrawRequest = (response) => {\r\n        if((response.from === 1 && curUser._id === room.player2.id)\r\n            || (response.from === 2 && curUser._id === room.player1.id)) {\r\n            swal({\r\n                title: \"Đối thủ muốn hòa với bạn\",\r\n                text: \"Bạn có đồng ý ?\",\r\n                icon: \"info\",\r\n                buttons: {\r\n                    confirm: {\r\n                        text: \"Xác nhận\",\r\n                        value: \"confirm\"\r\n                    },\r\n                    cancel: \"Không\"\r\n                },\r\n            })\r\n            .then((value) => {\r\n                if(value === \"confirm\") {\r\n                    socket.emit(\"gameResult\", {\r\n                        room: {\r\n                            ...room,\r\n                            status: 0\r\n                        },\r\n                        winner: 0,\r\n                        resultType: \"draw\" // Còn 1 type nữa là \"winLose\"\r\n                    });\r\n                } else {\r\n                    socket.emit(\"deniedDrawRequest\", {\r\n                        roomId: room.roomId,\r\n                        from: curUser._id === room.player1.id ? 1 : 2\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleAnswerDrawRequest = (response) => {\r\n        if((response.from === 1 && curUser._id === room.player2.id)\r\n            || (response.from === 2 && curUser._id === room.player1.id)) {\r\n            swal({\r\n                title: \"Đối thủ từ chối đề nghị hòa\",\r\n                text: \":((((\",\r\n                icon: \"error\"\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleOverTime = (id) => {\r\n        console.log(id);\r\n        console.log(room);\r\n        if(id === 1) {\r\n            socket.emit(\"gameResult\", {\r\n                room: {\r\n                    ...room,\r\n                    status: 0\r\n                },\r\n                winner: 2,\r\n                resultType: \"winLose\" // Còn 1 type nữa là \"draw\"\r\n            });\r\n        } else if (id === 2) {\r\n            socket.emit(\"gameResult\", {\r\n                room: {\r\n                    ...room,\r\n                    status: 0\r\n                },\r\n                winner: 1,\r\n                resultType: \"winLose\" // Còn 1 type nữa là \"draw\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const isMyTurn = () => {\r\n        if(room.status === 0) return false;\r\n        else {\r\n            if(curUser._id === room.player1.id) {\r\n                if(room.nextTurn === 1) return true;\r\n                return false;\r\n            } else if(curUser._id === room.player2.id) {\r\n                if(room.nextTurn === 2) return true;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTimer1 = () => {\r\n        if(room.status === 0) return false;\r\n        if(room.nextTurn === 1) {\r\n            return true;\r\n        }\r\n        else return false\r\n    }\r\n\r\n    const handleTimer2 = () => {\r\n        if(room.status === 0) return false;\r\n        if(room.nextTurn === 2) {\r\n            return true;\r\n        }\r\n        else return false\r\n    }\r\n\r\n    const showGameResult = (response) => {\r\n        const { winner, loser, resultType} = response;\r\n        if(resultType !== \"winLose\") {\r\n            if(curUser._id === winner.id) {\r\n                if(winner.first_elo < winner.final_elo) {\r\n                    swal(\"Hòa\", \r\n                        \"Elo ban đầu: \" + `${winner.first_elo}\\n` +\r\n                        \"Tăng lên:    \"  + `${winner.final_elo}` + \" ↑\", \r\n                        \"info\"\r\n                    );\r\n                } else if(winner.first_elo > winner.final_elo) {\r\n                    swal(\"Hòa\", \r\n                        \"Elo ban đầu: \" + `${winner.first_elo}\\n` +\r\n                        \"Giảm xuống:  \"  + `${winner.final_elo}` + \" ↓\", \r\n                        \"info\"\r\n                    );\r\n                } else {\r\n                    swal(\"Hòa\", \r\n                        \"Elo ban đầu: \" + `${winner.first_elo}\\n` +\r\n                        \"Giữ nguyên:  \"  + `${winner.final_elo}`, \r\n                        \"info\"\r\n                    );\r\n                }\r\n            } else if (curUser._id === loser.id) {\r\n                if(loser.first_elo < loser.final_elo) {\r\n                    swal(\"Hòa\", \r\n                        \"Elo ban đầu: \" + `${loser.first_elo}\\n` +\r\n                        \"Tăng lên:    \"  + `${loser.final_elo}` + \" ↑\", \r\n                        \"info\"\r\n                    );\r\n                } else if(loser.first_elo > loser.final_elo) {\r\n                    swal(\"Hòa\", \r\n                        \"Elo ban đầu: \" + `${loser.first_elo}\\n` +\r\n                        \"Giảm xuống:  \"  + `${loser.final_elo}` + \" ↓\", \r\n                        \"info\"\r\n                    );\r\n                } else {\r\n                    swal(\"Hòa\", \r\n                        \"Elo ban đầu: \" + `${loser.first_elo}\\n` +\r\n                        \"Giữ nguyên:  \"  + `${loser.final_elo}`, \r\n                        \"info\"\r\n                    );\r\n                }\r\n            } else {\r\n                swal(\"Kết quả\", \r\n                    \"Hòa\", \r\n                    \"success\"\r\n                );\r\n            }\r\n        } else {\r\n            if(curUser._id === winner.id) {\r\n                swal(\"Bạn là người chiến thắng\", \r\n                    \"Elo ban đầu: \" + `${winner.first_elo}\\n` +\r\n                    \"Tăng lên:    \"  + `${winner.final_elo}` + \" ↑\", \r\n                    \"success\"\r\n                );\r\n            } else if (curUser._id === loser.id) {\r\n                    swal(\"Bạn đã thua\", \r\n                    `Elo ban đầu: ${loser.first_elo}\\n` +\r\n                    `Giảm xuống:  ${loser.final_elo} ↓`, \r\n                    \"error\"\r\n                );\r\n            } else {\r\n                if(winner.id === room.player1.id)\r\n                    swal(\"Kết quả\", \r\n                        `Người chơi X chiến thắng`, \r\n                        \"success\"\r\n                    );\r\n                else\r\n                    swal(\"Kết quả\", \r\n                        `Người chơi O chiến thắng`, \r\n                        \"success\"\r\n                    );\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClickOpenInviteDialog = () => {\r\n        let invitableUsers = usersOnline;\r\n        for(let a=0; a < invitableUsers.length; a++)\r\n        {\r\n            invitableUsers[a].invited = false;\r\n        }\r\n        setUsersOnline(invitableUsers);\r\n        console.log(usersOnline);\r\n        setOpenInviteDialog(true);\r\n    };\r\n\r\n    const handleCloseInviteDialog = () => {\r\n        setOpenInviteDialog(false);\r\n    };\r\n    \r\n    const handleClickInvitePlayer = (invitedPlayer) =>{\r\n        invitedPlayer.invited = true;\r\n        let invitableUsers = usersOnline;\r\n        for(let a=0; a < invitableUsers.length; a++)\r\n        {\r\n            if(invitableUsers[a].userId === invitedPlayer.userId)\r\n            {\r\n                invitableUsers[a] = invitedPlayer;\r\n            }\r\n        }\r\n        invitableUsers = invitableUsers.concat({\"socketId\":\"\",\"userId\":curUser._id,\"userName\":\"\",\"invited\":false});\r\n        setUsersOnline(invitableUsers);\r\n        console.log(usersOnline);\r\n        console.log( invitedPlayer);\r\n        socket.emit(\"invitePlayer\", {\"playerInviteName\":curUser.name,\"room\":roomID,\"invitePlayerId\":invitedPlayer.userId});\r\n    };\r\n\r\n    if(isLeaving) return <Redirect to=\"/\" />\r\n  \r\n    return (\r\n        <div>\r\n            <div style={{textAlign:'center'}}>\r\n                <h1>Room {roomID}</h1>\r\n            </div>\r\n            <Grid container>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={1}/>\r\n                        <Grid item xs={10}>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={12} md={7} style={{minWidth: '705px'}}>\r\n                                    <Grid container justify='center'>\r\n                                        <CaroGame isStart={isMyTurn()} room={room} socket={socket}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={5} style={{minWidth: '570px'}}>\r\n                                    <Grid container direction='row' style={{marginBottom: '20px'}}>\r\n                                        <Card style={{borderRadius: '20px', width:'45%'}}>\r\n                                            <CardHeader \r\n                                                style={{backgroundColor: room.nextTurn === 1 ? 'red' : 'gray', textAlign: 'center'}}\r\n                                                title=\"#Người chơi (X)\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                { room.player1.name ? \r\n                                                <Typography variant=\"h5\" component=\"h4\" style={{textAlign: 'center', color: '#03fc4e'}}>{room.player1.name}</Typography>\r\n                                                :\r\n                                                <Typography variant=\"h5\" component=\"h4\" style={{textAlign: 'center'}}>Trống</Typography>\r\n                                                }\r\n                                                <CountDown id={1} isPlaying={handleTimer1()} duration={duration} onTimeEnd={handleOverTime} changeKey={changeKey}/>\r\n                                            </CardContent>\r\n                                            <CardActions>\r\n                                                <Button onClick={() => joinPlayer(1)} variant=\"contained\" size=\"small\" color=\"primary\" fullWidth disabled={room.player1.name ? true : false} style={{borderRadius: '20px'}}>Tham gia</Button>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                        <Card style={{borderRadius: '20px', width:'45%', marginLeft: '9%'}}>\r\n                                            <CardHeader \r\n                                                style={{backgroundColor: room.nextTurn === 2 ? 'red' : 'gray', textAlign: 'center'}}\r\n                                                title=\"#Người chơi (O)\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                { room.player2.name ? \r\n                                                <Typography variant=\"h5\" component=\"h4\" style={{textAlign: 'center', color: '#03fc4e'}}>{room.player2.name}</Typography>\r\n                                                :\r\n                                                <Typography variant=\"h5\" component=\"h4\" style={{textAlign: 'center'}}>Trống</Typography>\r\n                                                }\r\n                                                <CountDown id={2} isPlaying={handleTimer2()} duration={duration} onTimeEnd={handleOverTime} changeKey={changeKey}/>\r\n                                            </CardContent>\r\n                                            <CardActions>\r\n                                                <Button onClick={() => joinPlayer(2)} variant=\"contained\" size=\"small\" color=\"primary\" fullWidth disabled={room.player2.name ? true : false} style={{borderRadius: '20px'}}>Tham gia</Button>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                    <Grid container direction=\"row\" style={{marginBottom:'30px'}} justify=\"center\" >\r\n                                        <Button onClick={() => room.status === 0 ? handlePlay() : handleDefeat()} variant=\"contained\" color=\"primary\">{room.status === 0 ? \"Bẳt đầu\" : \"Đầu hàng\"}</Button>\r\n                                        <Button onClick={() => handleDraw()} style={{marginLeft:'30px'}} variant=\"contained\" color=\"primary\" disabled={room.status === 1 ? false : true}>Xin hòa</Button>\r\n                                    </Grid>\r\n                                    <Grid container direction=\"row\" style={{marginBottom:'30px'}} justify=\"center\" >\r\n                                        <Button onClick={() => leavePlayer()} variant=\"contained\" color=\"secondary\" disabled={room.status === 0 ? false : true}>Làm khán giả</Button>\r\n                                        <Button onClick={() => handleClickOpenInviteDialog()} style={{marginLeft:'30px', backgroundColor: '#5beb6f'}} variant=\"contained\">Mời</Button>\r\n                                        <Button onClick={() => handleLeaveRoom()} style={{marginLeft:'30px'}} variant=\"contained\">Thoát phòng</Button>\r\n                                    </Grid>\r\n                                    <MessageRoom socket={socket} room={room}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={1}/>\r\n\r\n                         {/* Invite players dialog */}\r\n                        <Dialog  onClose={handleCloseInviteDialog} aria-labelledby=\"customized-dialog-title\" open={openInviteDialog}>\r\n                        <DialogTitle style = {{width:'300px'}} id=\"customized-dialog-title\" onClose={handleCloseInviteDialog}>\r\n                            Danh sách người chơi online\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            <Typography gutterBottom>\r\n                            {usersOnline.map(item => \r\n                                item.userId !== curUser._id && item.canInvite !== false ?\r\n                                <div key={item.userId}>\r\n                                    <li >\r\n                                        <span>{item.userName}\r\n                                        <Button disabled = {item.invited} onClick={() => handleClickInvitePlayer(item)} style={{height:'20px',float: 'right'}} variant=\"contained\" >Mời</Button>\r\n                                        </span>                                  \r\n                                    </li>\r\n                                 </div>\r\n                            : null\r\n                            )}\r\n                            </Typography>\r\n                            \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button autoFocus onClick={handleCloseInviteDialog} color=\"primary\">\r\n                            Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                        </Dialog>\r\n                </Grid>\r\n            </Grid>\r\n        </div>    \r\n    )\r\n  }\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Facebook.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Google.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\axiosClient.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroSquare.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroRow.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageRoom.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CountDown.js",["248","249"],"import React, { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Styles = makeStyles((theme) => ({\r\n    h1: {\r\n        fontFamily: \"Roboto\",\r\n        textAlign: \"center\",\r\n        marginBottom: \"40px\"\r\n    },\r\n    timer_wrapper: {\r\n        marginTop: \"10px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    timer: {\r\n        fontFamily: \"Montserrat\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    text: {\r\n        color: \"#aaa\",\r\n    },\r\n    value: {\r\n        fontSize: \"40px\",\r\n    },\r\n    info: {\r\n        maxWidth: \"360px\",\r\n        margin: \"40px auto 0\",\r\n        textAlign: \"center\",\r\n        fontSize: \"16px\",\r\n    }\r\n}));\r\n\r\nconst renderTime = ({ remainingTime, elapsedTime }) => {\r\n    const classes = Styles();\r\n    if(remainingTime === 0) {\r\n        return <div className={classes.timer}>Hết thời gian</div>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.timer}>\r\n            <div className={classes.text}>Còn lại</div>\r\n            <div className={classes.value}>{remainingTime}</div>\r\n            <div className={classes.text}>Giây</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CountDown = ({ id, isPlaying, duration, onTimeEnd, changeKey }) => {\r\n    const classes = Styles();\r\n\r\n    return (\r\n        <div className={classes.timer_wrapper}>\r\n            <CountdownCircleTimer\r\n            key={isPlaying || changeKey}\r\n            isPlaying={isPlaying}\r\n            duration={duration}\r\n            colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\r\n            onComplete={() => {\r\n                onTimeEnd(id);\r\n                return [false, 1000];\r\n            }}\r\n            >\r\n            {renderTime}\r\n            </CountdownCircleTimer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CountDown;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroGame.js",["250","251","252","253","254","255","256"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport CaroBoard from './CaroBoard';\r\nimport { io } from 'socket.io-client';\r\nimport { SportsHockeyRounded } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnBold: {\r\n        fontWeight: 'bold',\r\n    },\r\n    game: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    gameInfo: {\r\n        marginLeft: '20px'\r\n    }\r\n}));\r\n\r\nconst size = 20;\r\nconst winCondition = 5;\r\n\r\nconst CaroGame = ({ socket, isStart, room }) => {\r\n    let tmpArr = Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      tmpArr[i] = Array(size).fill(null);\r\n    }\r\n\r\n    const [gameConfig, setGameConfig] = useState({\r\n        width: size,\r\n        height: size,\r\n        history: [{\r\n            squares: tmpArr,\r\n            location: null\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        isDescending: true\r\n    });\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        socket.on('updateGameConfig', response => setGameConfig(response));\r\n        socket.on('opponentMove',  response => handleClick(response.i, response.j));\r\n    }, [socket]);\r\n\r\n    const history = gameConfig.history;\r\n    const current = history[gameConfig.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let moves = history.map((step, move) => {\r\n        const desc = move ?\r\n        'Go to move #' + move + ' (' + step.location.x + ',' + step.location.y + ')' :\r\n        'Go to game start';\r\n        return (gameConfig.stepNumber === move) ? (\r\n            <li key={move}>\r\n                <Button className={classes.btnBold} onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        ) : (\r\n            <li key={move}>\r\n                <Button onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        );\r\n    })\r\n    if(gameConfig.isDescending) {\r\n        moves = moves.reverse();\r\n    }\r\n\r\n    let arrow = gameConfig.isDescending ? '↓' : '↑';\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner.val;\r\n    } else {\r\n        status = 'Next player: ' + (gameConfig.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    const handleClick = (i, j) => {\r\n        if(!isStart) return;\r\n        const newHistory = gameConfig.history.slice(0, gameConfig.stepNumber + 1);\r\n        const current = history[gameConfig.stepNumber];\r\n        const squares = current.squares.slice();\r\n\r\n        current.squares.map((row, index) => {\r\n            squares[index] = current.squares[index].slice();\r\n            return true;\r\n        });\r\n\r\n        if(squares[i][j] || calculateWinner(squares)) return;\r\n       \r\n        squares[i][j] = gameConfig.xIsNext ? 'X' : 'O';\r\n        \r\n        socket.emit('nextMove', {\r\n            i: i,\r\n            j: j,\r\n            room: room,\r\n            gameConfig: {\r\n                ...gameConfig,\r\n                history: newHistory.concat([{\r\n                    squares: squares,\r\n                    location: {x: i, y: j}\r\n                }]),\r\n                stepNumber: newHistory.length,\r\n                xIsNext: !gameConfig.xIsNext\r\n            }\r\n        });\r\n\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            history: newHistory.concat([{\r\n                squares: squares,\r\n                location: {x: i, y: j}\r\n            }]),\r\n            stepNumber: newHistory.length,\r\n            xIsNext: !gameConfig.xIsNext\r\n        });\r\n        \r\n        if(calculateWinner(squares)) \r\n        {\r\n            socket.emit(\"gameResult\", {\r\n                room: {\r\n                    ...room,\r\n                    status: 0,\r\n                    curGame: {\r\n                        ...room.curGame,\r\n                        move: {\r\n                            ...gameConfig,\r\n                            history: newHistory.concat([{\r\n                                squares: squares,\r\n                                location: {x: i, y: j}\r\n                            }]),\r\n                            stepNumber: newHistory.length,\r\n                            xIsNext: !gameConfig.xIsNext\r\n                        }\r\n                    }\r\n                },\r\n                winner: gameConfig.xIsNext ? 1 : 2,\r\n                resultType: \"winLose\" // Còn 1 type nữa là \"draw\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const sort = () => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            isDescending: !gameConfig.isDescending\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.game}>\r\n                <div>\r\n                    <CaroBoard\r\n                        squares={current.squares}\r\n                        onClick={(i, j) => handleClick(i, j)}\r\n                        winner={winner}\r\n                        isStart={isStart}\r\n                    />\r\n                </div>\r\n                {/* <div className={classes.gameInfo}>\r\n                    <div>\r\n                        <Button onClick={sort}>Thứ tự bước {arrow}</Button>\r\n                    </div>\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    let win;\r\n    for (let i = 0; i < squares.length; i++) {\r\n      for (let j = 0; j < squares[i].length; j++) {\r\n        if (!squares[i][j]) continue;\r\n        if (j <= squares[i].length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i][j + k] !== squares[i][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRight'};\r\n        }\r\n        if (i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j] !== squares[i + k + 1][j]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToDown'};\r\n        }\r\n        if (j <= squares[i].length - winCondition && i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRightDown'};\r\n        }\r\n        if (i <= squares.length - winCondition && j >= winCondition - 1) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToLeftDown'};\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default CaroGame;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\oauthApi.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageBox.js",["257","258","259","260"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    width: '100%',\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n    padding: '10px',\r\n//    position: 'fixed',\r\n  },\r\n  messList: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    height: '75%',\r\n    overflow: 'auto',\r\n    // margin: theme.spacing(1),\r\n  },\r\n  searchIcon: {\r\n    margin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n  const classes = useStyles();\r\n  const { messagesEndRef, addMessages, messages, message, setMessage } = props;\r\n  return (\r\n      <div className={classes.root} id=\"messages\"  >\r\n        <div className={classes.messList}>\r\n            {messages.map((item, index) =>\r\n                <Message key={index} message={item}/>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n        </div>\r\n        <form action=\"#\" onSubmit={addMessages} className={classes.searchIcon}>\r\n          <TextField fullWidth id=\"outlined-basic\" label=\"Tin nhắn\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message} autoComplete=\"off\" />\r\n          <button type=\"submit\" style={{marginLeft: \"10px\", height: \"100%\"}}>\r\n            <SendIcon color=\"primary\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n}",{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":10,"column":8,"nodeType":"267","messageId":"268","endLine":10,"endColumn":18},{"ruleId":"265","severity":1,"message":"269","line":1,"column":16,"nodeType":"267","messageId":"268","endLine":1,"endColumn":24},{"ruleId":"265","severity":1,"message":"270","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":18},{"ruleId":"265","severity":1,"message":"271","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":14},{"ruleId":"265","severity":1,"message":"272","line":4,"column":16,"nodeType":"267","messageId":"268","endLine":4,"endColumn":22},{"ruleId":"265","severity":1,"message":"273","line":4,"column":24,"nodeType":"267","messageId":"268","endLine":4,"endColumn":30},{"ruleId":"265","severity":1,"message":"274","line":4,"column":32,"nodeType":"267","messageId":"268","endLine":4,"endColumn":35},{"ruleId":"265","severity":1,"message":"275","line":4,"column":37,"nodeType":"267","messageId":"268","endLine":4,"endColumn":48},{"ruleId":"265","severity":1,"message":"276","line":4,"column":50,"nodeType":"267","messageId":"268","endLine":4,"endColumn":54},{"ruleId":"265","severity":1,"message":"277","line":4,"column":68,"nodeType":"267","messageId":"268","endLine":4,"endColumn":77},{"ruleId":"265","severity":1,"message":"278","line":4,"column":79,"nodeType":"267","messageId":"268","endLine":4,"endColumn":88},{"ruleId":"265","severity":1,"message":"279","line":4,"column":100,"nodeType":"267","messageId":"268","endLine":4,"endColumn":111},{"ruleId":"265","severity":1,"message":"280","line":4,"column":113,"nodeType":"267","messageId":"268","endLine":4,"endColumn":125},{"ruleId":"265","severity":1,"message":"281","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":15},{"ruleId":"265","severity":1,"message":"272","line":4,"column":17,"nodeType":"267","messageId":"268","endLine":4,"endColumn":23},{"ruleId":"265","severity":1,"message":"273","line":4,"column":25,"nodeType":"267","messageId":"268","endLine":4,"endColumn":31},{"ruleId":"265","severity":1,"message":"278","line":4,"column":80,"nodeType":"267","messageId":"268","endLine":4,"endColumn":89},{"ruleId":"265","severity":1,"message":"282","line":9,"column":21,"nodeType":"267","messageId":"268","endLine":9,"endColumn":25},{"ruleId":"265","severity":1,"message":"283","line":17,"column":8,"nodeType":"267","messageId":"268","endLine":17,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":32,"column":5,"nodeType":"286","endLine":32,"endColumn":7,"suggestions":"287"},{"ruleId":"265","severity":1,"message":"281","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":15},{"ruleId":"265","severity":1,"message":"273","line":4,"column":25,"nodeType":"267","messageId":"268","endLine":4,"endColumn":31},{"ruleId":"284","severity":1,"message":"288","line":40,"column":5,"nodeType":"286","endLine":40,"endColumn":7,"suggestions":"289"},{"ruleId":"265","severity":1,"message":"290","line":65,"column":9,"nodeType":"267","messageId":"268","endLine":65,"endColumn":17},{"ruleId":"265","severity":1,"message":"291","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"292","line":7,"column":10,"nodeType":"267","messageId":"268","endLine":7,"endColumn":19},{"ruleId":"284","severity":1,"message":"293","line":67,"column":8,"nodeType":"286","endLine":67,"endColumn":10,"suggestions":"294"},{"ruleId":"295","severity":1,"message":"296","line":74,"column":10,"nodeType":"297","messageId":"298","endLine":74,"endColumn":11,"suggestions":"299"},{"ruleId":"295","severity":1,"message":"296","line":74,"column":67,"nodeType":"297","messageId":"298","endLine":74,"endColumn":68,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":95,"column":39,"nodeType":"303","messageId":"304","endLine":95,"endColumn":40},{"ruleId":"265","severity":1,"message":"305","line":2,"column":44,"nodeType":"267","messageId":"268","endLine":2,"endColumn":52},{"ruleId":"265","severity":1,"message":"306","line":2,"column":54,"nodeType":"267","messageId":"268","endLine":2,"endColumn":70},{"ruleId":"265","severity":1,"message":"305","line":2,"column":60,"nodeType":"267","messageId":"268","endLine":2,"endColumn":68},{"ruleId":"265","severity":1,"message":"306","line":2,"column":70,"nodeType":"267","messageId":"268","endLine":2,"endColumn":86},{"ruleId":"265","severity":1,"message":"307","line":7,"column":11,"nodeType":"267","messageId":"268","endLine":7,"endColumn":23},{"ruleId":"265","severity":1,"message":"269","line":1,"column":16,"nodeType":"267","messageId":"268","endLine":1,"endColumn":24},{"ruleId":"265","severity":1,"message":"270","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":18},{"ruleId":"265","severity":1,"message":"277","line":5,"column":42,"nodeType":"267","messageId":"268","endLine":5,"endColumn":51},{"ruleId":"265","severity":1,"message":"308","line":5,"column":79,"nodeType":"267","messageId":"268","endLine":5,"endColumn":89},{"ruleId":"265","severity":1,"message":"291","line":1,"column":27,"nodeType":"267","messageId":"268","endLine":1,"endColumn":36},{"ruleId":"265","severity":1,"message":"271","line":2,"column":9,"nodeType":"267","messageId":"268","endLine":2,"endColumn":13},{"ruleId":"265","severity":1,"message":"309","line":2,"column":52,"nodeType":"267","messageId":"268","endLine":2,"endColumn":62},{"ruleId":"265","severity":1,"message":"310","line":2,"column":74,"nodeType":"267","messageId":"268","endLine":2,"endColumn":78},{"ruleId":"265","severity":1,"message":"311","line":8,"column":8,"nodeType":"267","messageId":"268","endLine":8,"endColumn":16},{"ruleId":"265","severity":1,"message":"312","line":10,"column":8,"nodeType":"267","messageId":"268","endLine":10,"endColumn":10},{"ruleId":"265","severity":1,"message":"313","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":15},{"ruleId":"265","severity":1,"message":"270","line":13,"column":10,"nodeType":"267","messageId":"268","endLine":13,"endColumn":18},{"ruleId":"265","severity":1,"message":"314","line":45,"column":9,"nodeType":"267","messageId":"268","endLine":45,"endColumn":19},{"ruleId":"265","severity":1,"message":"315","line":46,"column":8,"nodeType":"267","messageId":"268","endLine":46,"endColumn":19},{"ruleId":"284","severity":1,"message":"316","line":71,"column":8,"nodeType":"286","endLine":71,"endColumn":18,"suggestions":"317"},{"ruleId":"265","severity":1,"message":"275","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":21},{"ruleId":"265","severity":1,"message":"273","line":3,"column":29,"nodeType":"267","messageId":"268","endLine":3,"endColumn":35},{"ruleId":"265","severity":1,"message":"318","line":4,"column":1,"nodeType":"267","messageId":"268","endLine":4,"endColumn":16},{"ruleId":"265","severity":1,"message":"278","line":4,"column":57,"nodeType":"267","messageId":"268","endLine":4,"endColumn":66},{"ruleId":"265","severity":1,"message":"282","line":12,"column":32,"nodeType":"267","messageId":"268","endLine":12,"endColumn":36},{"ruleId":"265","severity":1,"message":"319","line":124,"column":10,"nodeType":"267","messageId":"268","endLine":124,"endColumn":25},{"ruleId":"284","severity":1,"message":"320","line":229,"column":6,"nodeType":"286","endLine":229,"endColumn":8,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":270,"column":31,"nodeType":"303","messageId":"324","endLine":270,"endColumn":33},{"ruleId":"265","severity":1,"message":"325","line":277,"column":9,"nodeType":"267","messageId":"268","endLine":277,"endColumn":18},{"ruleId":"322","severity":1,"message":"323","line":299,"column":31,"nodeType":"303","messageId":"324","endLine":299,"endColumn":33},{"ruleId":"265","severity":1,"message":"282","line":4,"column":34,"nodeType":"267","messageId":"268","endLine":4,"endColumn":38},{"ruleId":"265","severity":1,"message":"281","line":4,"column":47,"nodeType":"267","messageId":"268","endLine":4,"endColumn":52},{"ruleId":"265","severity":1,"message":"274","line":4,"column":54,"nodeType":"267","messageId":"268","endLine":4,"endColumn":57},{"ruleId":"265","severity":1,"message":"326","line":9,"column":10,"nodeType":"267","messageId":"268","endLine":9,"endColumn":22},{"ruleId":"265","severity":1,"message":"327","line":89,"column":12,"nodeType":"267","messageId":"268","endLine":89,"endColumn":21},{"ruleId":"265","severity":1,"message":"328","line":89,"column":23,"nodeType":"267","messageId":"268","endLine":89,"endColumn":35},{"ruleId":"284","severity":1,"message":"329","line":101,"column":8,"nodeType":"286","endLine":101,"endColumn":14,"suggestions":"330"},{"ruleId":"301","severity":1,"message":"302","line":389,"column":41,"nodeType":"303","messageId":"304","endLine":389,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":390,"column":42,"nodeType":"303","messageId":"304","endLine":390,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":390,"column":66,"nodeType":"303","messageId":"304","endLine":390,"endColumn":67},{"ruleId":"301","severity":1,"message":"302","line":395,"column":41,"nodeType":"303","messageId":"304","endLine":395,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":396,"column":42,"nodeType":"303","messageId":"304","endLine":396,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":396,"column":66,"nodeType":"303","messageId":"304","endLine":396,"endColumn":67},{"ruleId":"301","severity":1,"message":"302","line":401,"column":41,"nodeType":"303","messageId":"304","endLine":401,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":402,"column":42,"nodeType":"303","messageId":"304","endLine":402,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":409,"column":41,"nodeType":"303","messageId":"304","endLine":409,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":410,"column":42,"nodeType":"303","messageId":"304","endLine":410,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":410,"column":65,"nodeType":"303","messageId":"304","endLine":410,"endColumn":66},{"ruleId":"301","severity":1,"message":"302","line":415,"column":41,"nodeType":"303","messageId":"304","endLine":415,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":416,"column":42,"nodeType":"303","messageId":"304","endLine":416,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":416,"column":65,"nodeType":"303","messageId":"304","endLine":416,"endColumn":66},{"ruleId":"301","severity":1,"message":"302","line":421,"column":41,"nodeType":"303","messageId":"304","endLine":421,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":422,"column":42,"nodeType":"303","messageId":"304","endLine":422,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":435,"column":37,"nodeType":"303","messageId":"304","endLine":435,"endColumn":38},{"ruleId":"301","severity":1,"message":"302","line":436,"column":38,"nodeType":"303","messageId":"304","endLine":436,"endColumn":39},{"ruleId":"301","severity":1,"message":"302","line":436,"column":62,"nodeType":"303","messageId":"304","endLine":436,"endColumn":63},{"ruleId":"265","severity":1,"message":"269","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"291","line":1,"column":27,"nodeType":"267","messageId":"268","endLine":1,"endColumn":36},{"ruleId":"265","severity":1,"message":"312","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":12},{"ruleId":"265","severity":1,"message":"331","line":6,"column":10,"nodeType":"267","messageId":"268","endLine":6,"endColumn":29},{"ruleId":"284","severity":1,"message":"332","line":46,"column":8,"nodeType":"286","endLine":46,"endColumn":16,"suggestions":"333"},{"ruleId":"265","severity":1,"message":"334","line":66,"column":17,"nodeType":"267","messageId":"268","endLine":66,"endColumn":22},{"ruleId":"265","severity":1,"message":"335","line":69,"column":9,"nodeType":"267","messageId":"268","endLine":69,"endColumn":14},{"ruleId":"265","severity":1,"message":"336","line":74,"column":9,"nodeType":"267","messageId":"268","endLine":74,"endColumn":15},{"ruleId":"265","severity":1,"message":"337","line":150,"column":11,"nodeType":"267","messageId":"268","endLine":150,"endColumn":15},{"ruleId":"265","severity":1,"message":"269","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"291","line":1,"column":27,"nodeType":"267","messageId":"268","endLine":1,"endColumn":36},{"ruleId":"265","severity":1,"message":"338","line":1,"column":38,"nodeType":"267","messageId":"268","endLine":1,"endColumn":44},{"ruleId":"265","severity":1,"message":"270","line":6,"column":10,"nodeType":"267","messageId":"268","endLine":6,"endColumn":18},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'HistoryBox' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Redirect' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'CssBaseline' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'TextField' is defined but never used.","'CardContent' is defined but never used.","'GridListTile' is defined but never used.","'Paper' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["341"],"React Hook useEffect has a missing dependency: 'curUser._id'. Either include it or remove the dependency array.",["342"],"'response' is assigned a value but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'move'. Either include it or remove the dependency array.",["343"],"no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["344","345"],["346","347"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'renderSquare' is assigned a value but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","'Menu' is defined but never used.","'MenuIcon' is defined but never used.","'io' is defined but never used.","'userApi' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'addMessages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["348"],"'TablePagination' is defined but never used.","'isFindQuickGame' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'curUser._id', 'joinRoom', and 'socket'. Either include them or remove the dependency array.",["349"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'leaveRoom' is assigned a value but never used.","'RoomOutlined' is defined but never used.","'isEndGame' is assigned a value but never used.","'setIsEndGame' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'changeKey', 'handleAnswerDrawRequest', 'handleGetDrawRequest', 'showGameResult', and 'socket'. Either include them or remove the dependency array. You can also do a functional update 'setChangeKey(c => ...)' if you only need 'changeKey' in the 'setChangeKey' call.",["350"],"'SportsHockeyRounded' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["351"],"'moves' is assigned a value but never used.","'arrow' is assigned a value but never used.","'status' is assigned a value but never used.","'sort' is assigned a value but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"messageId":"358","fix":"359","desc":"360"},{"messageId":"361","fix":"362","desc":"363"},{"messageId":"358","fix":"364","desc":"360"},{"messageId":"361","fix":"365","desc":"363"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},"Update the dependencies array to be: [id]",{"range":"374","text":"375"},"Update the dependencies array to be: [curUser._id]",{"range":"376","text":"377"},"Update the dependencies array to be: [move]",{"range":"378","text":"379"},"removeEscape",{"range":"380","text":"381"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"382","text":"383"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"384","text":"381"},{"range":"385","text":"383"},"Update the dependencies array to be: [messages, socket]",{"range":"386","text":"387"},"Update the dependencies array to be: [curUser._id, joinRoom, socket]",{"range":"388","text":"389"},"Update the dependencies array to be: [changeKey, handleAnswerDrawRequest, handleGetDrawRequest, room, showGameResult, socket]",{"range":"390","text":"391"},"Update the dependencies array to be: [handleClick, socket]",{"range":"392","text":"393"},[1207,1209],"[id]",[1338,1340],"[curUser._id]",[1688,1690],"[move]",[1929,1930],"",[1929,1929],"\\",[1986,1987],[1986,1986],[2094,2104],"[messages, socket]",[7024,7026],"[curUser._id, joinRoom, socket]",[3574,3580],"[changeKey, handleAnswerDrawRequest, handleGetDrawRequest, room, showGameResult, socket]",[1245,1253],"[handleClick, socket]"]